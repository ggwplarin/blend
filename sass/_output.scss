@use 'sass:list';
@use 'sass:map';
@use 'sass:meta';
@use 'utils/array';
@use 'utils/channel';
@use 'convert';

// $spaces: (
//   'cie': ('lab', 'lch'),
//   'srgb': ('rgb', 'hsl', 'hwb', 'device-cmyk', 'sass'),
//   'r2020': 'rec-2020',
//   'display-p3': 'display-p3',
//   'prophoto-rgb': 'prophoto-rgb',
//   'a98-rgb': 'a98-rgb',
// );

$css-functions: (
  'lab', 'lch',
  'rgb', 'hsl', 'hwb', 'device-cmyk',
);

@function string(
  $channels,
  $a: 100%,
  $format: 'rgb',
) {
  $channels: channel.format($channels, $format);
  $channels: array.join($channels, ' ');
  $channels: if(
    $a < 100,
    array.join($channels channel.alpha($a), ' / '),
    $channels
  );

  @if list.index($css-functions, $format) {
    @return '#{$format}(#{$channels})';
  }

  @return 'color(#{$format} #{$channels})';
}

@function sass(
  $rgb,
  $a: 100%,
) {
  $rgb: channel.format($rgb);
  $rgba: list.append($rgb, $a);
  @return rgba($rgba...);
}


@function value(
  $channels,
  $a: 100%,
  $output: 'sass',
) {
  @if ($output == 'sass') {
    @return sass($channels, $a);
  }

  @return string($channels, $a, $output);
}
