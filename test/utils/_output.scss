@use '../../node_modules/sass-true/sass/true' as *;
@use '../../sass/utils/output';
@use 'sass:string';

@include describe('utils/output') {
  @include describe('sass()') {
    @include it('Converts rgb fraction values to sass colors'){
      @include assert-equal(
        output.sass(0 0 0),
        black
      );
      @include assert-equal(
        output.sass(1 1 1),
        white
      );
      @include assert-equal(
        output.sass(1 0 0),
        red
      );
    }

    @include it('Accepts an alpha value as percent') {
      @include assert-equal(
        output.sass(0 0 0, 50%),
        rgba(black, 0.5)
      );
    }

    @include it('Accepts an alpha value as fraction') {
      @include assert-equal(
        output.sass(0 0 0, 0.5),
        rgba(black, 50%)
      );
    }
  }

  @include describe('string()') {
    @include it('Converts rgb/a channels to rgb string') {
      @include assert-equal(
        output.string(0.5555 0.6666 0.7777, 0.5, 'rgb'),
        string.unquote('rgb(55.55% 66.66% 77.77% / 50%)')
      );
    }

    @include it('Converts hsl/a channels to hsl string') {
      @include assert-equal(
        output.string(0.5555 0.6666 0.7777, 0.5, 'hsl'),
        string.unquote('hsl(55.55deg 66.66% 77.77% / 50%)')
      );
    }

    @include it('Converts hwb/a channels to hwb string') {
      @include assert-equal(
        output.string(0.5555 0.6666 0.7777, 0.5, 'hwb'),
        string.unquote('hwb(55.55deg 66.66% 77.77% / 50%)')
      );
    }

    @include it('Converts lab/a channels to lab string') {
      @include assert-equal(
        output.string(0.5555 0.6666 0.7777, 0.5, 'lab'),
        string.unquote('lab(55.55% 66.66 77.77 / 50%)')
      );
    }

    @include it('Converts lch/a channels to lch string') {
      @include assert-equal(
        output.string(0.5555 0.6666 0.7777, 0.5, 'lch'),
        string.unquote('lch(55.55% 66.66 77.77 / 50%)')
      );
    }
  }
}
